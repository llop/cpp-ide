<!DOCTYPE html>
<html ng-app="cppApp">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    
    <!-- title, meta, stylesheets, favicon, scripts, ... -->
    <title><% title %></title>
    
    <!-- Bootstrap -->
    <link href="/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    
    <link rel='stylesheet' href='https://fonts.googleapis.com/css?family=Ubuntu+Mono' />
    <link rel="stylesheet" href="/jquery-ui/themes/base/jquery-ui.css" />
    <link rel="stylesheet" href="/jquery-layout/layout-default-1.4.4.css" />
    <link rel="stylesheet" href="/jstree/dist/themes/default/style.min.css" />
    <link rel="stylesheet" href="/editablegrid/editablegrid.css" />
    <link rel='stylesheet' href='/css/style.css' />
    
  </head>
  <body>
    
    <div class="ui-layout-west" ng-controller="GdbController as gdb">
      <ul>
        <li><a href="#project-tab">Projects</a></li>
      </ul>
      <div class="ui-layout-content ui-widget-content">
        <div id="project-tab">
          
          <div id="file-tree">
            <ul>
              <li data-jstree='{"opened":true}'>Project 1
                <ul>
                  <li data-jstree='{"icon":"glyphicon glyphicon-leaf","selected":true}'>main.cc</li>
                </ul>
              </li>
            </ul>
          </div>

        </div>
      </div> 
    </div>

    <div class="ui-layout-east">
      <ul>
        <li><a href="#debug-tab">Debug</a></li>
      </ul>
      <div class="ui-layout-content ui-widget-content">
        <div id="debug-tab" style="height:100%">

          <div id="debug-layout" style="height:100%">
            <div class="ui-layout-north">
              <div style="padding:5px">
              <div class="btn-toolbar" role="toolbar">
                <div class="btn-group" role="group">
                  <div class="btn-group">
                    <button type="button" class="btn btn-success">Run</button>
                    <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                      <span class="caret"></span>
                      <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <ul class="dropdown-menu">
                      <li><a href="#">Run</a></li>
                      <li role="separator" class="divider"></li>
                      <li><a href="#">Run configurations</a></li>
                    </ul>
                  </div>
                </div>
                <div class="btn-group" role="group">
                  <button type="button" class="btn btn-danger">Stop</button>
                </div>
                <div class="btn-group" role="group">
                  <button type="button" class="btn btn-info">Step over</button>
                  <button type="button" class="btn btn-info">Step in</button>
                  <button type="button" class="btn btn-info">Step out</button>
                </div>      
              </div>
            </div>
            </div>
            
            <div class="ui-layout-center">
              <ul>
                <li><a href="#debug-vars-tab">Variables</a></li>
                <li><a href="#debug-expr-tab">Expressions</a></li>
                <li><a href="#debug-break-tab">Breakpoints</a></li>
                <li><a href="#debug-frame-tab">Call stack</a></li>
              </ul>
              <div class="ui-layout-content ui-widget-content">
                <div id="debug-vars-tab">
                  <div id="tablecontent" gdb-variables="{{gdbVariables}}"></div>
                </div>
                <div id="debug-expr-tab">

                </div>
                <div id="debug-break-tab">

                </div>
                <div id="debug-frame-tab">

                </div>
              </div> 
            </div>
            
            <div class="ui-layout-south">
              <ul>
                <li><a href="#debug-term-tab">Program IO</a></li>
              </ul>
              <div class="ui-layout-content ui-widget-content">
                <div id="debug-term-tab" class="term" style="width:100%;height:100%">
                  <div id="term" style="width:100%;height:100%;overflow:auto" gdb-term=""></div>
                </div>
              </div> 
            </div>

          </div>

        </div>
      </div> 
    </div>

    <div class="ui-layout-north">
      <ul class="toolbar">
        <li class="first">File</li>
        <li>Run</li>
        <li class="last">Tools</li>
      </ul>
    </div>

    <div class="ui-layout-center">
      <ul>
        <li><a href="#code-tab">main.cc</a></li>
      </ul>
      <div class="ui-layout-content ui-widget-content">
        <div id="code-tab" style="height:100%">
          <div id="editor" style="height:100%"></div>
        </div>
      </div> 
    </div>
    
    
    
    <!-- JQuery -->
    <script src="/jquery/dist/jquery.min.js"></script>
    <script src="/jquery-ui/jquery-ui.min.js"></script>
    
    
    
    <script src="/jquery-layout/jquery.layout-1.4.4.js"></script>
    <script src="/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="/jstree/dist/jstree.min.js"></script>
    <script src="/ace-builds/src-min/ace.js"></script>
    <script src="/term.js/src/term.js"></script>
    
    <!-- editablegrid imports -->
    <script src="/editablegrid/editablegrid.js"></script>
		<script src="/editablegrid/editablegrid_renderers.js" ></script>
		<script src="/editablegrid/editablegrid_editors.js" ></script>
		<script src="/editablegrid/editablegrid_validators.js" ></script>
		<script src="/editablegrid/editablegrid_utils.js" ></script>
		<script src="/editablegrid/editablegrid_charts.js" ></script>
		
    <script>
      var socket,
          editor,
          editableGrid;
  
      $(function() {
        
        // ace.js c++ editor
        editor = ace.edit("editor");
        editor.setTheme("ace/theme/monokai");
        editor.getSession().setMode("ace/mode/c_cpp");
        getWFile();
        
        // tabs
        $(".ui-layout-west")
          .tabs()
          .find(".ui-tabs-nav")
					.sortable({ axis: 'x', zIndex: 2 });
        $(".ui-layout-center")
          .tabs()
          .find(".ui-tabs-nav")
					.sortable({ axis: 'x', zIndex: 2 });
        $(".ui-layout-east")
          .tabs()
          .find(".ui-tabs-nav")
					.sortable({ axis: 'x', zIndex: 2 });
        $(".ui-layout-south")
          .tabs()
          .find(".ui-tabs-nav")
					.sortable({ axis: 'x', zIndex: 2 });
        
        // jstree for file system
        $("#file-tree").jstree();
         
        
      });
      
      
      //-----------------------------------------
      // Angular
      //-----------------------------------------
      //var gdbApp = angular.module('gdbApp', []);
      //gdbApp.controller('GdbController', ['$scope', function($scope) {
      //  $scope.gdbState = {
      //    debugStatus: 'idle',
      //    execStatus: 'stopped',
      //    interactive: false
      //  };
      //}]);
      
      //-----------------------------------------
      // Source code file services
      //-----------------------------------------
      function getWFile() {
        $.get("/wfile", function(data, status){
          editor.setValue(data.wfile, -1);  // data.wfile holds main.cc's contents
        });
      }
      function postWFile() {
        $.post("/wfile", { wfile: editor.getValue() });
      }
    </script>
    <script src="/js/layout.js"></script>
    
    
    <!-- Angular and sockets -->
    <script src="/socket.io-client/socket.io.js"></script>
    <script src="/angular/angular.js"></script>
    <script src="/angular-socket-io/socket.js"></script>
    <script>
      var cppApp = angular.module('cppApp', ['btford.socket-io']);
      cppApp.factory('socket', function (socketFactory) { return socketFactory(); });
      cppApp.controller('GdbController', ['$scope', 'socket', function($scope, socket) {
        $scope.gdbState = {
          debugStatus: 'idle',
          execStatus: 'stopped',
          interactive: false
        };
        $scope.gdbVariables = [
          {name:"x", type:"int", value:"5"},
          {name:"s", type:"string", value:"Hola"}
        ];
        // socket setup
        socket.on('gdb-var-list', function(data) {
          
        });
        socket.on('gdb-frame-list', function(data) {
          
        });
        socket.on('gdb-state', function(data) {
          
        });
      }]);
      cppApp.directive('gdbTerm', ['socket', function(socket) {
          return {
            restrict: 'A',
            link: function(scope, element, attrs) {
              var term = new Terminal({
                cols: 80,
                rows: 24,
                screenKeys: true
              });
              term.on('data', function(data) {
                socket.emit('gdb-app-in', data);
              });
              term.open(element[0]);
              //term.write('\x1b[31mWelcome to term.js!\x1b[m\r\n');
              socket.on('appOut', function(data) {
                term.write(data);
              });
              socket.on('disconnect', function() {
                term.destroy();
              });
              
            }
          };
      }]);
      cppApp.directive('gdbVariables', ['socket', function(socket) {
        return {
          restrict: 'A',
          link: function(scope, element, attrs) {
            
            // editablegrid data
            var metadata = [];
            metadata.push({ name: "name", label: "Name", datatype: "string", editable: false});
            metadata.push({ name: "type", label: "Type", datatype: "string", editable: false});
            metadata.push({ name: "value", label:"Value", datatype: "string", editable: true});
            var data = [];
            data.push({id: 1, values: ["x","int","10"]});
            data.push({id: 2, values: ["s","string","eo"]});
            // editablegrid init
            editableGrid = new EditableGrid("DemoGridJSData", {
              // called when some value has been modified: we display a message
              modelChanged: function(rowIdx, colIdx, oldValue, newValue, row) { 
                //_$("message").innerHTML = "<p class='ok'>New value is '" + newValue + "'</p>";
                socket.emit('gdb-set-var-value', colIdx, oldValue, newValue);
                alert("MODEL CHANGE: "+colIdx+', '+oldValue+', '+newValue);
              }
            });
            editableGrid.load({"metadata": metadata});
            editableGrid.renderGrid("tablecontent", "testgrid");

            
            scope.$watch(attrs.gdbVariables, function(newValue, oldValue) {
              editableGrid.load({"data": data});
              editableGrid.renderGrid("tablecontent", "testgrid");
            });
          }
        };
      }]);
    </script>
    
  </body>
</html>
